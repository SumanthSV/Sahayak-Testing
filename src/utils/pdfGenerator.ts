import pdfMake from './pdfMakeConfig'; // Import configured pdfMake
import { getFontForLanguage, isFontAvailable } from './fonts/fontBase64';

export const generatePDF = (content: string, filename: string = 'document', language: string = 'en') => {
  // Get the appropriate font for the selected language
  const selectedFont = getFontForLanguage(language);
  
  // Check if the font is available, fallback to Roboto if not
  const fontFamily = isFontAvailable(language) ? selectedFont : 'Roboto';
  
  // Create the document definition for pdfMake
  const docDefinition = {
    content: [
      {
        text: 'Sahayak AI - Generated Content',
        style: 'header',
        margin: [0, 0, 0, 20]
      },
      {
        text: content,
        style: 'content'
      },
      {
        text: '\n\n',
        style: 'spacer'
      },
      {
        text: 'Generated by Sahayak AI Teaching Assistant',
        style: 'footer'
      }
    ],
    styles: {
      header: {
        fontSize: 18,
        bold: true,
        color: '#4F46E5',
        alignment: 'center',
        font: fontFamily
      },
      content: {
        fontSize: 12,
        lineHeight: 1.5,
        alignment: 'left',
        font: fontFamily,
        margin: [0, 10, 0, 10]
      },
      footer: {
        fontSize: 10,
        color: '#6B7280',
        alignment: 'center',
        font: fontFamily
      },
      spacer: {
        fontSize: 8
      }
    },
    defaultStyle: {
      font: fontFamily,
      fontSize: 12
    },
    pageMargins: [40, 60, 40, 60],
    info: {
      title: filename,
      author: 'Sahayak AI',
      subject: 'Educational Content',
      creator: 'Sahayak AI Teaching Assistant'
    }
  };

  // Generate and download the PDF
  try {
    pdfMake.createPdf(docDefinition).download(`${filename}.pdf`);
  } catch (error) {
    console.error('Error generating PDF:', error);
    // Fallback to basic PDF generation if there's an error
    const fallbackDocDefinition = {
      content: [
        { text: 'Sahayak AI - Generated Content', fontSize: 18, bold: true, margin: [0, 0, 0, 20] },
        { text: content, fontSize: 12, lineHeight: 1.5 }
      ],
      defaultStyle: {
        font: 'Roboto'
      }
    };
    pdfMake.createPdf(fallbackDocDefinition).download(`${filename}.pdf`);
  }
};